plugins {
    id 'com.android.application'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'org.sonarqube'
    id 'dagger.hilt.android.plugin'
}

sonarqube {
    properties {
        property "sonar.projectName", "Riddler"
        property "sonar.projectKey", "Riddler"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.exclusions", '**/.gradle/**,' +
                "**/androidTest/**," +
                "**/R.class," +
                "**/BuildConfig.*," +
                "**/Manifest*.*," +
                "**/android/databinding/*," +
                "**/androidx/databinding/*," +
                "**/*MapperImpl*.*," +
                "**/BuildConfig.*," +
                "**/Manifest*.*," +
                "**/google-services.json"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

sonarqube {
    properties {
        property "sonar.projectName", "Riddler"
        property "sonar.projectKey", "Riddler"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.exclusions", '**/.gradle/**,' +
                "**/androidTest/**," +
                "**/R.class," +
                "**/BuildConfig.*," +
                "**/Manifest*.*," +
                "**/android/databinding/*," +
                "**/androidx/databinding/*," +
                "**/*MapperImpl*.*," +
                "**/BuildConfig.*," +
                "**/Manifest*.*," +
                "**/google-services.json"
    }
}

//
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.riddler"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
dependencies {
    // Core
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.wear.tiles:tiles-material:+'

    // Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "io.mockk:mockk:1.12.4"

    // Card View
    implementation "androidx.cardview:cardview:1.0.0"

    //roomDB
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"

    // ViewModel & LiveData
    def lifecycle_version = "2.5.0-rc01"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // GJSON
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.1.0')

    // Declare the dependency for the Cloud Functions library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-functions-ktx'


    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'

    //RxKotlin
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'

    //Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    def fragment_version = "1.4.1"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //tests mockk
    testImplementation "io.mockk:mockk:1.12.4"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-compiler:2.42'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // UI
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
   // implementation 'com.github.fornewid:neuromorphism:0.2.1'

    /*Moshi*/
    def moshiVersion = "1.13.0"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.fragment:fragment-testing:1.4.1'
    androidTestImplementation 'io.mockk:mockk-android:1.10.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
}
